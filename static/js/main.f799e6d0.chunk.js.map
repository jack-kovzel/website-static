{"version":3,"sources":["config/Config.ts","components/QuoteText.tsx","components/TextBlock.tsx","components/Name.tsx","components/Menu.tsx","components/Contacts.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Config","background","color","value","position","repeat","size","opacity","fullScreen","zIndex","particles","links","distance","enable","move","speed","number","density","QuoteText","className","this","props","text","React","Component","TextBlock","Name","name","Menu","Contacts","href","src","App","onResize","container","document","getElementById","style","height","window","addEventListener","error","errorInfo","removeEventListener","id","options","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8UAEaA,EAAS,CAClBC,WAAY,CACRC,MAAO,CACHC,MAAO,WAEXC,SAAU,UACVC,OAAQ,YACRC,KAAM,QACNC,QAAS,IAEbC,WAAY,CACRC,OAAQ,GAEZC,UAAW,CACPC,MAAO,CACHC,SAAU,IACVC,QAAQ,EACRX,MAAO,SACPK,QAAS,IAEbO,KAAM,CACFD,QAAQ,EACRE,MAAO,GAGXT,KAAM,CACFH,MAAO,GAEXa,OAAQ,CACJb,MAAO,GACPc,QAAS,CACLJ,QAAQ,IAGhBX,MAAO,CACHC,MAAO,U,gBClCNe,EAAb,4JACI,WACI,OAAO,mBAAGC,UAAU,yCAAb,SAAuDC,KAAKC,MAAMC,WAFjF,GAA+BC,IAAMC,WCAxBC,G,OAAb,4JACI,WACI,OAAO,mBAAGN,UAAU,wBAAb,SAAsCC,KAAKC,MAAMC,WAFhE,GAA+BC,IAAMC,YCAxBE,G,OAAb,4JACI,WACI,OAAO,sBAAMP,UAAU,iCAAhB,SACH,sBAAMA,UAAU,OAAhB,SAAwBC,KAAKC,MAAMM,aAH/C,GAA0BJ,IAAMC,YCAnBI,G,OAAb,4JACI,WACI,OAAO,sBAAMT,UAAU,iBAAhB,SACH,sBAAMA,UAAU,8BAAhB,4BAHZ,GAA0BI,IAAMC,YCAnBK,G,OAAb,4JACI,WACI,OACI,sBAAKV,UAAU,WAAf,UACI,0CACA,4BAAG,mBAAGW,KAAK,iCAAR,uCACH,4BAAG,mBAAGA,KAAK,2CAAR,SACC,qBAAKX,UAAU,iBACVY,IAAI,qEAR7B,GAA8BR,IAAMC,YCwDrBQ,E,kDA9CX,aAAe,IAAD,8BACV,cAAM,KAHDC,cAEK,EAGV,EAAKA,SAAW,WACZ,IAAMC,EAAYC,SAASC,eAAe,aAEvCF,IACCA,EAAUG,MAAMC,OAAS,SAPvB,E,qDAYd,WAAqB,IAAD,OAChBC,OAAOC,iBAAiB,UAAU,kBAAM,EAAKP,gB,+BAGjD,SAAkBQ,EAAcC,GAC5BH,OAAOI,oBAAoB,SAAUvB,KAAKa,Y,oBAG9C,WACI,OACI,qBAAKd,UAAU,MAAf,SACI,yBAAQA,UAAU,gBAAgByB,GAAG,YAArC,UACI,cAAC,EAAD,CAAMjB,KAAK,kBACX,cAAC,EAAD,IACA,cAAC,EAAD,CAAWL,KAAK,0DAChB,cAAC,EAAD,CAAWA,KAAK,8BAChB,cAAC,EAAD,CAAWA,KAAK,qFAChB,cAAC,EAAD,CACIA,KAAK,uMACT,cAAC,EAAD,CACIA,KAAK,uGACT,cAAC,EAAD,CACIA,KAAK,wHACT,cAAC,EAAD,IACA,cAAC,IAAD,CACIsB,GAAG,cACHC,QAAS7C,a,GAzCfuB,IAAMC,WCITsB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASC,eAAe,SAM1BU,K","file":"static/js/main.f799e6d0.chunk.js","sourcesContent":["import {ISourceOptions} from \"tsparticles\";\n\nexport const Config = {\n    background: {\n        color: {\n            value: \"#0d47a1\"\n        },\n        position: \"50% 50%\",\n        repeat: \"no-repeat\",\n        size: \"cover\",\n        opacity: 0.1\n    },\n    fullScreen: {\n        zIndex: 1\n    },\n    particles: {\n        links: {\n            distance: 150,\n            enable: true,\n            color: \"34b7eb\",\n            opacity: 0.5,\n        },\n        move: {\n            enable: true,\n            speed: 1,\n\n        },\n        size: {\n            value: 1\n        },\n        number: {\n            value: 50,\n            density: {\n                enable: true\n            }\n        },\n        color: {\n            value: \"#fff\"\n        },\n\n    }\n} as ISourceOptions","import React from \"react\";\nimport './QuoteText.css';\n\nexport class QuoteText extends React.Component<{ text: string }> {\n    render() {\n        return <p className=\"Quote-text hello-text-block text-block\">{this.props.text}</p>;\n    }\n}","import React from \"react\";\nimport './TextBlock.css'\n\nexport class TextBlock extends React.Component<{ text: string }> {\n    render() {\n        return <p className=\"Text-block text-block\">{this.props.text}</p>;\n    }\n}","import React from \"react\";\nimport './Name.css';\n\nexport class Name extends React.Component<{ name: string }> {\n    render() {\n        return <span className=\"Name-container App-header-name\">\n            <span className=\"Name\">{this.props.name}</span>\n        </span>;\n    }\n}","import React from \"react\";\nimport './Menu.css';\n\nexport class Menu extends React.Component<{}> {\n    render() {\n        return <span className=\"Menu-container\">\n            <span className=\"Menu-item active Menu-about\">About me</span>\n        </span>;\n    }\n}","import React from \"react\";\nimport './Contacts.css'\n\nexport class Contacts extends React.Component {\n    render() {\n        return (\n            <div className=\"Contacts\">\n                <p>Contacts:</p>\n                <p><a href=\"mailto:contact@jack-kovzel.com\">contact@jack-kovzel.com</a></p>\n                <p><a href=\"https://www.linkedin.com/in/jack-kovzel/\">\n                    <img className=\"contact-social\"\n                         src=\"https://cdn-icons-png.flaticon.com/512/174/174857.png\"></img>\n                </a>\n                </p>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport Particles from \"react-tsparticles\";\nimport {Config} from \"./config/Config\";\nimport {QuoteText} from \"./components/QuoteText\";\nimport {TextBlock} from \"./components/TextBlock\";\nimport {Name} from \"./components/Name\";\nimport {Menu} from \"./components/Menu\";\nimport {Contacts} from \"./components/Contacts\";\n\nclass App extends React.Component<{}> {\n    readonly onResize: () => void;\n\n    constructor() {\n        super({});\n\n        this.onResize = () => {\n            const container = document.getElementById('container');\n\n            if(container) {\n                container.style.height = '100%'\n            }\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', () => this.onResize())\n    }\n\n    componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n        window.removeEventListener('resize', this.onResize)\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-main-text\" id=\"container\">\n                    <Name name=\"Evgeny Kovzel\" />\n                    <Menu />\n                    <QuoteText text=\"THOSE WHO CAN – DO, THOSE WHO CAN'T – TEACH\"/>\n                    <TextBlock text=\"Hello, my name is Evgeny.\"/>\n                    <TextBlock text=\"I have more than 6 years in Web Development. Especially in Back-end Development.\"/>\n                    <TextBlock\n                        text=\"Strong knowledge of back-end technologies such as PHP (Symfony 5/Flex) in conjunction with technologies and instruments such as Elasticsearch, Git, MySQL, RabbitMQ, Docker, Behat, PHPUnit, Jest.\"/>\n                    <TextBlock\n                        text=\"Also have experience with front-end development and technologies such as jQuery, Node.js, ReactJS.\"/>\n                    <TextBlock\n                        text=\"Also have experience setting up and working with AWS resources such as CloudWatch, Lambda, SQS, ECR, ECS, EC2, etc.\"/>\n                    <Contacts/>\n                    <Particles\n                        id=\"tsparticles\"\n                        options={Config}\n                    />\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}